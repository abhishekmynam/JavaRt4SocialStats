package Implementations;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import CentralObjects.TweetDTO;
import Controller.SocialMediaUserAuth;
import Controller.AuthHeadersGenerator.TwitterAuthHeaderGen;

public class TwittersSearch extends TwitterCommonFuncs implements ITwitterSearch {

	public List<TweetDTO> GetTwitterSearchWithKeyWord(SocialMediaUserAuth auth, List<String> searchString) {
		List<TweetDTO> tweets = new ArrayList<TweetDTO>();
		String url = TwitterURLBuilder(searchString);
		TwitterAuthHeaderGen headerGen = new TwitterAuthHeaderGen();
		String header = headerGen.generateAuthorizationHeader(auth, "GET", url);
		URL myURL;
		StringBuilder timeLine = new StringBuilder();
		try {

			myURL = new URL(url);
			HttpURLConnection myURLConnection = (HttpURLConnection) myURL.openConnection();
			myURLConnection.setRequestProperty("Authorization", header);
			BufferedReader tweetString = new BufferedReader(new InputStreamReader(myURLConnection.getInputStream()));
			timeLine.append(tweetString.readLine());
			tweets = convertResponseToTweet(timeLine.toString());

		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return tweets;
	}

	private String TwitterURLBuilder(List<String> urlParameters) {
		StringBuilder TwitterURL = new StringBuilder("https://twitter.com/search?q=");
		for (String param : urlParameters) {
			if (param.contains("@")) {
				TwitterURL = TwitterURL.append("%40").append(param.substring(1));
			} else if (param.contains("#")) {
				TwitterURL = TwitterURL.append("%23").append(param.substring(1));
			} else if (param.contains(" OR ")) {
				param.replace(" OR ", "%20OR%20");
				TwitterURL = TwitterURL.append(param);
			} else if (param.startsWith("\"") && param.endsWith("\"")) {
				param.replace(" ", "%20");
				TwitterURL = TwitterURL.append(param);
			} else if (param.contains(" -")) {
				param.replace(" -", "%20-");
				TwitterURL = TwitterURL.append(param);
			} else if (param.contains("from:")) {
				param.replace("from:", "from%3");
				TwitterURL = TwitterURL.append(param);
			} else if (param.contains("to:")) {
				param.replace("to:", "to%3");
				TwitterURL = TwitterURL.append(param);
			} else if (param.contains("list:")) {
				param.replace("list:", "list%3");
				param.replace("/", "%2");
				TwitterURL = TwitterURL.append(param);
			} else if (param.contains("filter:safe")) {
				param.replace("filter:safe", "filter%3Asafe");
			} else {
				TwitterURL = TwitterURL.append(param);
			}

		}
		return TwitterURL.toString();

	}

}
